/*
________          __  .__    __________                   .___
\_____  \ _______/  |_|__|   \______   \_______  ____   __| _/
 /   |   \\____ \   __\  |    |     ___/\_  __ \/  _ \ / __ | 
/    |    \  |_> >  | |  |    |    |     |  | \(  <_> ) /_/ | 
\_______  /   __/|__| |__| /\ |____|     |__|   \____/\____ | 
        \/|__|             \/                              \/
        */

/*
  This code reads temperature and solar flux data from a sensor and a voltage sensor, 
  and then prints the data to the serial monitor.
*/

#include "OneWire.h"           // Include the OneWire library for communication with the sensor
#include "DallasTemperature.h"  // Include the DallasTemperature library for managing the sensor

OneWire oneWire(A2);            // Create a OneWire object to communicate with the sensor on pin A2
DallasTemperature ds(&oneWire); // Create a DallasTemperature object and associate it with the OneWire object

#define VOLT A1
float volt, volts; // Variables to store voltage readings

// Define the pin for the LED
int ledPin = 2;


void setup()
{
  Serial.begin(9600); // Initialize serial communication at a baud rate of 9600
  ds.begin();          // Initialize the DallasTemperature sensor
}

void loop()
{
 digitalWrite(ledPin, LOW);
  // Temperature Measurement
  ds.requestTemperatures();   // Send a temperature measurement request to the sensor
  int t = ds.getTempCByIndex(0); // Read the temperature in degrees Celsius from the sensor and store it in the 't' variable

  // Solar Flux Measurement
  /*---------Voltage Measurement----------*/
  int temp1 = analogRead(VOLT);  // Read the analog voltage from pin A1
  volts = (temp1 / 511.5) * 2.5; // Calculate the voltage in volts based on the analog reading
  delay(10);

  /*-------Solar Flux Calculation--------*/
  int ResistorValue = 2;         // Resistor value in Kohms
  float Surface = 0.015400;            // Surface area in square meters
  float Power = (volts * volts) / ResistorValue;  // Calculate power in watts (P=UI=(U*U)/R)
  float Solar_Flux = Power / Surface;             // Calculate solar flux in mW/m^2
  delay(10);


  /*-------Current--------*/
  float Current =  volts/ ResistorValue;  // Calculate current
  delay(10);


  // Printing the Measurements
  /*------Send to Serial------*/
  Serial.print("Temperature: ");
  Serial.print(t);            // Print the temperature in degrees Celsius
  Serial.print("C   ");       // Print "C" to indicate the unit of measurement (degrees Celsius)

  Serial.print("Voltage: ");
  Serial.print(volts);        // Print the voltage in volts
  Serial.print("V\t");

  Serial.print("Power: ");
  Serial.print(Power);        // Print the power in mili watts
  Serial.print("mW  ");

  Serial.print("Current: ");
  Serial.print(Current);        // Print the power in mili watts
  Serial.print("mA  ");

  Serial.print("Solar Flux: ");
  Serial.print(Solar_Flux);   // Print the solar flux in mW/m^2
  Serial.println("mW.m^2");   // End the line

 
  delay(500); // Wait for 500 milliseconds before taking the next reading
  digitalWrite(ledPin, HIGH);
    delay(100); // Wait for 500 milliseconds before taking the next reading
  digitalWrite(ledPin, LOW);
}